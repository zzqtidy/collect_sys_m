<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
       http://www.springframework.org/schema/beans/spring-beans.xsd
       http://www.springframework.org/schema/context
       http://www.springframework.org/schema/context/spring-context-4.0.xsd">
    <!--配置整合Mybatis过程-->
    <!--1：配置数据库的相关操作,通过context:property-placeholder命名空间可以导入外部的properties文件-->
    <context:property-placeholder location="classpath:jdbc.properties"/>
    <!--2:数据库的连接池-->
    <!-- 配置数据源 c3p0-->
    <!--<bean id="dataSource" class="com.mchange.v2.c3p0.ComboPooledDataSource" destroy-method="close">-->
        <!--<property name="driverClass" value="${jdbc.driver}"/>-->
        <!--<property name="jdbcUrl" value="${jdbc.url}"/>-->
        <!--<property name="user" value="${jdbc.username}"/>-->
        <!--<property name="password" value="${jdbc.password}"/>-->
        <!--&lt;!&ndash;c3p0的私有属性&ndash;&gt;-->
        <!--&lt;!&ndash;最小连接池个数&ndash;&gt;-->
        <!--<property name="minPoolSize" value="10"/>-->
        <!--&lt;!&ndash;最大连接池个数&ndash;&gt;-->
        <!--<property name="maxPoolSize" value="30"/>-->
        <!--&lt;!&ndash;关闭连接后不自动提交&ndash;&gt;-->
        <!--<property name="autoCommitOnClose" value="false"/>-->
        <!--&lt;!&ndash;获取连接池中连接的超时时间&ndash;&gt;-->
        <!--<property name="checkoutTimeout" value="1000"/>-->
        <!--&lt;!&ndash;获取连接池中连接的超时次数&ndash;&gt;-->
        <!--<property name="acquireRetryAttempts" value="2"/>-->

        <!--<property name="maxStatements" value="0"/>-->
    <!--</bean>-->

    <!-- 配置数据源 Druid-->
    <bean name="dataSource" class="com.alibaba.druid.pool.DruidDataSource"
          init-method="init" destroy-method="close">
        <property name="url" value="${jdbc.url}" />
        <property name="username" value="${jdbc.username}" />
        <property name="password" value="${jdbc.password}" />

        <!-- 初始化连接大小 -->
        <property name="initialSize" value="5" />
        <!-- 连接池最大使用连接数量 -->
        <property name="maxActive" value="50" />
        <!-- 连接池最大空闲 该参数已废弃 -->
        <!-- property name="maxIdle" value="20" / -->
        <!-- 连接池最小空闲 -->
        <property name="minIdle" value="1" />
        <!-- 获取连接最大等待时间 -->
        <property name="maxWait" value="60000" />

        <!-- <property name="poolPreparedStatements" value="true" /> <property
            name="maxPoolPreparedStatementPerConnectionSize" value="33" /> -->
        <!--mysql的机制，当一旦连接闲置超过八小时后，mysql会自动断开连接，要重启tomcat，加上下面这一句来验证数据库的有效性-->
        <property name="validationQuery" value="${validationQuery}" />
        <property name="testOnBorrow" value="false" />
        <property name="testOnReturn" value="false" />
        <property name="testWhileIdle" value="true" />

        <!-- 配置间隔多久才进行一次检测，检测需要关闭的空闲连接，单位是毫秒 -->
        <property name="timeBetweenEvictionRunsMillis" value="60000" />
        <!-- 配置一个连接在池中最小生存的时间，单位是毫秒 -->
        <property name="minEvictableIdleTimeMillis" value="25200000" />

        <!-- 打开removeAbandoned功能 -->
        <property name="removeAbandoned" value="true" />
        <!-- 1800秒，也就是30分钟 -->
        <property name="removeAbandonedTimeout" value="1800" />
        <!-- 关闭abanded连接时输出错误日志 -->
        <property name="logAbandoned" value="true" />

        <!-- 监控数据库 -->
        <!-- <property name="filters" value="stat" /> -->
        <property name="filters" value="mergeStat,wall" />
    </bean>

    <!--约定大于配置-->
    <!--3:配置sqlSessionFactory-->
    <bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
        <!--注入数据库的连接池-->
        <property name="dataSource" ref="dataSource"/>
        <!--配置mybatis的全局配置文件-->
        <property name="configLocation" value="classpath:mybatis-config.xml"/>
        <!--扫描Entity包 使用别名-->
        <property name="typeAliasesPackage" value="org.zzq.csm.entity"/>
        <!--扫描Sql配置文件：mapper下的xml文件-->
        <property name="mapperLocations" value="classpath:mapper/**/*Mapper.xml"/>
    </bean>

    <!--4:配置dao接口包，动态实现dao接口，注入到spring容器中-->
    <bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
        <!--使用懒加载注入sqlSessionFactory中-->
        <property name="sqlSessionFactoryBeanName" value="sqlSessionFactory"/>
        <!--给出需要扫描的Dao接口包-->
        <property name="basePackage" value="org.zzq.csm.dao"/>
    </bean>

    <!--由于redis（jedis）并不是mybatis的范畴，系统不会自动注入redis的dao，
    需要手动配置注入文件，java中我们采用的是构造函数注入
    todo：以后放于配置文件当中

    <bean id="redisDao" class="org.seckill.dao.cache.RedisDao">
        <constructor-arg index="0" value="localhost"/>
        <constructor-arg index="1" value="6379"/>
    </bean>-->
</beans>