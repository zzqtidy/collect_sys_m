<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:mvc="http://www.springframework.org/schema/mvc"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:aop="http://www.springframework.org/schema/aop"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
       http://www.springframework.org/schema/beans/spring-beans.xsd
       http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc.xsd
       http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop.xsd">

    <!--配置SpringMVC-->
    <!--启用@Required @Autowired,JSR 250's @PostConstruct,@PostDestroy 和 @Resource的标注-->
    <context:annotation-config/>
    <!--1.开启springMVC的注解模式
    以下这一句配置是简化配置
        1）自动注册DefaultAnnotationHandlerMapping（使用注解的Handler映射），
        AnnotationMethodHandlerAdaptor（使用注解的Handler适配器），这两个组件会自动放到Spring的容器当中
        2）提供了一系列的数据绑定，数字和日期等的Format，如@NumberFormat @DateTimeFormat
        3) 提供了xml、json的读写支持，也就是说如果要返回json数据（Restful接口中用到），不用额外配置
    -->
    <mvc:annotation-driven>
        <!-- 处理responseBody 里面日期类型 -->
        <mvc:message-converters>
            <bean class="org.springframework.http.converter.json.MappingJackson2HttpMessageConverter">
                <property name="objectMapper">
                    <bean class="com.fasterxml.jackson.databind.ObjectMapper">
                        <property name="dateFormat">
                            <bean class="java.text.SimpleDateFormat">
                                <constructor-arg type="java.lang.String" value="yyyy-MM-dd HH:mm:ss" />
                            </bean>
                        </property>
                    </bean>
                </property>
            </bean>
        </mvc:message-converters>
    </mvc:annotation-driven>


    <!--2.servlet-mapping映射-->
    <!-- 静态资源默认servlet配置
        1) 加入对静态资源的处理：如js、png、gif
        2）允许使用'/'作整体的映射
    -->
    <mvc:default-servlet-handler/>

    <!--配置jsp 显示ViewResolver
        可以用多个ViewResolver,使用order排序即可
        InternalResourceViewResolver 需要放置在最后
        如果不使用jsp，而使用模板，请将下面的注释。
    -->
    <!--<bean class="org.springframework.web.servlet.view.InternalResourceViewResolver">-->
        <!--&lt;!&ndash;view技术的Spring实现类&ndash;&gt;-->
        <!--<property name="viewClass" value="org.springframework.web.servlet.view.JstlView"/>-->
        <!--&lt;!&ndash;前缀&ndash;&gt;-->
        <!--<property name="prefix" value="/WEB-INF/pages/"/>-->
        <!--&lt;!&ndash;后缀&ndash;&gt;-->
        <!--<property name="suffix" value=".jsp"/>-->
    <!--</bean>-->

    <!-- 使用thymeleaf模板 解析 -->
    <bean id="templateResolver" class="org.thymeleaf.spring4.templateresolver.SpringResourceTemplateResolver">
        <property name="prefix" value="/WEB-INF/jquerypages/" />
        <property name="suffix" value=".html" />
        <property name="templateMode" value="HTML" />
        <property name="cacheable" value="false" />
        <property name="characterEncoding" value="UTF-8"/><!--不加会乱码-->
    </bean>

    <bean id="templateEngine"
          class="org.thymeleaf.spring4.SpringTemplateEngine">
        <property name="templateResolver" ref="templateResolver" />
    </bean>

    <bean class="org.thymeleaf.spring4.view.ThymeleafViewResolver">
        <property name="templateEngine" ref="templateEngine" />
        <!--解决中文乱码-->
        <property name="characterEncoding" value="UTF-8"/>
    </bean>

    <!--4.扫描Web相关的类，也就是扫描controller-->
    <context:component-scan base-package="org.zzq.csm.controller"/>

    <!-- 开启aop，对类代理 -->
    <aop:config proxy-target-class="true"></aop:config>

    <!-- 开启shiro注解支持 -->
    <bean class="org.apache.shiro.spring.security.interceptor.AuthorizationAttributeSourceAdvisor">
        <property name="securityManager" ref="securityManager" />
    </bean>
</beans>