<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
            http://www.springframework.org/schema/beans/spring-beans-4.0.xsd
            http://www.springframework.org/schema/context
            http://www.springframework.org/schema/context/spring-context.xsd">
    <bean id="demoTask" class="org.zzq.csm.quartz.DemoTask"></bean>
    <bean id="demo" class="org.springframework.scheduling.quartz.MethodInvokingJobDetailFactoryBean">
        <property name="targetObject" value="demoTask"></property>
        <!-- 任务类中需要执行的方法 -->
        <property name="targetMethod" value="execute"></property>
        <!-- 上一次未执行完成的，要等待有再执行 -->
        <property name="concurrent" value="false"></property>
    </bean>
    <bean id="demoTrigger"
          class="org.springframework.scheduling.quartz.CronTriggerFactoryBean">
        <property name="jobDetail" ref="demo" />
        <property name="cronExpression" value="0 0/1 * * * ?" />
    </bean>
    <!-- 以下是Quartz定时调度配制 -->
    <bean id="schedulerFactory"
          class="org.springframework.scheduling.quartz.SchedulerFactoryBean">
        <property name="configLocation" value="classpath:quartz.properties" />
        <property name="dataSource" ref="dataSource" />
        <property name="applicationContextSchedulerContextKey" value="applicationContext" />
        <!--可选，QuartzScheduler 启动时更新己存在的Job，这样就不用每次修改targetObject后删除qrtz_job_details表对应记录了 -->
        <property name="overwriteExistingJobs" value="true" />
        <!-- 设置自动启动 -->
        <property name="autoStartup" value="true" />
        <property name="startupDelay" value="5" />
        <property name="triggers">
            <list>
                <ref bean="demoTrigger" />
            </list>
        </property>
    </bean>
</beans>